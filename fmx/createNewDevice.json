{
  "fallbackCard": {
    "title": "Need anything custom?",
    "description": "Contact our sales team to explore your options.",
    "icon": "customize",
    "link": "https://blynk.io/console-form?refpage=Fallback"
  },
  "cards": [
    {
      "title": "Quickstart",
      "description": "A step-by-step guide to get your first device online in less than 5 minutes.",
      "icon": "rocket",
      "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "ESP32",
        "Microduino",
        "Particle",
        "Seeed Wio Terminal",
        "SparkFun Blynk Board",
        "Teensy",
        "TinyDuino"
      ],
      "link": "",
      "prio": 1
    },
    {
      "title": "Integrations",
      "description": "Access and manage all Blynk integrations in one place.",
      "icon": "rocket",
      "shownTags": [
        "AWS",
        "Blues",
        "TTI",
        "TTS",
        "TTN",
        "Myriota",
        "Cloud-to-cloud",
        "integration",
        "WiFi",
        "Ethernet",
        "Cellular",
        "LoRaWAN",
        "Satellite"
      ],
      "hiddenTags": [
        "LTE",
        "GSM",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1"
      ],
      "link": "/dashboard/integrations",
      "prio": 1
    },
    {
      "title": "Chirpstack Integration",
      "description": "We can help you connect your Chirpstack-powered devices to Blynk. Available with Enterprise plan.",
      "icon": "rocket",
      "shownTags": [
        "Chirpstack",
        "LNS",
        "LoRaWAN"
      ],
      "hiddenTags": [],
      "link": "https://blynk.io/console-form?refpage=Chirpstack",
      "prio": 1
    },
    {
      "title": "Arduino MQTT Sample",
      "description": "Sample code to connect Arduino devices to Blynk via MQTT.",
      "icon": "code",
      "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "WiFi"
      ],
      "hiddenTags": [
        "Espressif ESP32",
        "Raspberry Pi Pico W",
        "Nano 33 IoT",
        "Nano RP2040 Connect",
        "UNO R4 WiFi",
        "Seeed Wio Terminal"
      ],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Arduino_Blynk_MQTT/README.md",
      "prio": 2
    },
    {
      "title": "C with libmosquitto MQTT Sample",
      "description": "MQTT integration example using C and libmosquitto.",
      "icon": "code",
      "shownTags": [
        "C",
        "MQTT",
        "Mosquitto",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/C_libmosquitto/README.md",
      "prio": 2
    },
    {
      "title": "ESP-IDF Cellular MQTT Sample",
      "description": "Cellular ESP-IDF integration with Blynk via MQTT.",
      "icon": "code",
      "shownTags": [
        "ESP-IDF",
        "Cellular"
      ],
      "hiddenTags": [
        "ESP32"
      ],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/ESP-IDF-Cellular/README.md",
      "prio": 2
    },
    {
      "title": "HTML5 WebSocket MQTT Sample",
      "description": "Web-based MQTT control interface using HTML5 and WebSocket.",
      "icon": "code",
      "shownTags": [
        "HTML5",
        "JavaScript",
        "WebSocket",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/HTML5_WebSocket/README.md",
      "prio": 2
    },
    {
      "title": "Lua OpenWrt MQTT Sample",
      "description": "Sample MQTT code for Lua running on OpenWrt.",
      "icon": "code",
      "shownTags": [
        "Lua",
        "OpenWrt",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "SBC",
        "Onion Omega2"
      ],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Lua_OpenWrt/README.md",
      "prio": 2
    },
    {
      "title": "MicroPython MQTT Sample",
      "description": "Minimal MQTT example for MicroPython devices.",
      "icon": "code",
      "shownTags": [
        "Python",
        "MicroPython",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/MicroPython/README.md",
      "prio": 2
    },
    {
      "title": "Python 3 MQTT Sample",
      "description": "MQTT integration example for Raspberry Pi and industrial gateways.",
      "icon": "code",
      "shownTags": [
        "Python",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "Single Board Computers (SBCs)",
        "Raspberry Pi"
      ],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Python3/README.md",
      "prio": 2
    },
    {
      "title": "STM32F407 PPPoS MQTT Sample",
      "description": "MQTT over PPPoS for STM32F407-based projects.",
      "icon": "code",
      "shownTags": [
        "STM32",
        "FreeRTOS",
        "MQTT",
        "Cellular"
      ],
      "hiddenTags": [
        "STM32Cube",
        "PPPoS"
      ],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/STM32F407_PPPoS_MQTT/README.md",
      "prio": 2
    },
    {
      "title": "Zephyr MQTT",
      "description": NaN,
      "icon": "code",
      "shownTags": [
        "Zephyr",
        "MQTT"
      ],
      "hiddenTags": [],
      "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/???",
      "prio": 2
    },
    {
      "title": "Blynk.Edgent for MicroPython",
      "description": "Enables secure BLE provisioning, OTA updates, multi-network connectivity, and remote REPL access \u2014 all with built-in support for async I/O, TLS, and unified system configuration.",
      "icon": "code",
      "shownTags": [
        "OTA",
        "Provisioning",
        "MicroPython",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "ESP32",
        "Raspberry Pi Pico W",
        "Python"
      ],
      "link": "https://github.com/Blynk-Technologies/Blynk-MicroPython-Edgent",
      "prio": 2
    },
    {
      "title": "Firmware API Installation",
      "description": "Guide to installing Blynk firmware library.",
      "icon": "file-empty",
      "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "Blynk library",
        "firmware API",
        "Blynk protocol"
      ],
      "link": "https://docs.blynk.io/en/blynk-library-firmware-api/installation",
      "prio": 1
    },
    {
      "title": "Device MQTT API",
      "description": "MQTT API reference for device communication with Blynk.",
      "icon": "file-empty",
      "shownTags": [
        "MQTT",
        "MQTTS",
        "WebSocket",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [],
      "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api",
      "prio": 1
    },
    {
      "title": "Device HTTPS API",
      "description": "HTTPS API documentation for direct device-to-cloud communication.",
      "icon": "file-empty",
      "shownTags": [
        "HTTP",
        "HTTPS",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [],
      "link": "https://docs.blynk.io/en/blynk.cloud/device-https-api",
      "prio": 1
    },
    {
      "title": "Blynk.Edgent Overview",
      "description": "Dynamic authentication and OTA updates with Blynk.Edgent.",
      "icon": "file-empty",
      "shownTags": [
        "OTA",
        "Provisioning",
        "WiFi"
      ],
      "hiddenTags": [
        "ESP32",
        "ESP8266",
        "Seeed Wio Terminal",
        "TI CC3220"
      ],
      "link": "https://docs.blynk.io/en/blynk.edgent/overview",
      "prio": 1
    },
    {
      "title": "Blynk.NCP Overview",
      "description": "Offload connectivity and OTA logic using a Network Co-Processor.",
      "icon": "file-empty",
      "shownTags": [
        "OTA",
        "Provisioning",
        "Zephyr",
        "Arduino",
        "C99",
        "WiFi",
        "Ethernet"
      ],
      "hiddenTags": [
        "ESP32",
        "Arduino UNO R4 WiFi",
        "Arduino Portenta C33",
        "Arduino Nano RP2040 Connect",
        "Arduino Nano 33 IoT",
        "Arduino MKR WiFi 1010",
        "LILYGO T-PicoC3",
        "Raspberry Pi Pico",
        "ESP8266",
        "Mass",
        "Production",
        "Factory"
      ],
      "link": "https://docs.blynk.io/en/blynk.ncp/overview",
      "prio": 1
    },
    {
      "title": "AWS IoT Core Integration",
      "description": "Guide to integrating AWS IoT Core with Blynk.",
      "icon": "file-empty",
      "shownTags": [
        "Cloud-to-cloud",
        "AWS",
        "IoT Core"
      ],
      "hiddenTags": [],
      "link": "https://docs.blynk.io/en/hardware-guides/aws-iot-core",
      "prio": 1
    },
    {
      "title": "Blues Wireless Integration",
      "description": "Use Blues Cellular Notecard to send sensor data to Blynk.",
      "icon": "file-empty",
      "shownTags": [
        "Cloud-to-cloud",
        "WiFi",
        "Cellular",
        "LoRaWAN",
        "Satellite"
      ],
      "hiddenTags": [
        "Blues"
      ],
      "link": "https://docs.blynk.io/en/hardware-guides/blues",
      "prio": 2
    },
    {
      "title": "Myriota Integration",
      "description": "Connect satellite-powered devices to Blynk with Myriota.",
      "icon": "file-empty",
      "shownTags": [
        "Cloud-to-cloud",
        "Satellite"
      ],
      "hiddenTags": [
        "Myriota"
      ],
      "link": "https://docs.blynk.io/en/myriota",
      "prio": 2
    },
    {
      "title": "NCD Industrial Vibration Sensor",
      "description": "Step-by-step setup for industrial vibration sensors from NCD.",
      "icon": "file-empty",
      "shownTags": [
        "MQTT",
        "Node-RED"
      ],
      "hiddenTags": [
        "NCD.io"
      ],
      "link": "https://docs.blynk.io/en/hardware-guides/ncd-industrial-vibration-sensor",
      "prio": 2
    },
    {
      "title": "Node-RED",
      "description": "Connect Node-RED flows to Blynk and control devices visually.",
      "icon": "file-empty",
      "shownTags": [
        "MQTT",
        "Node-RED",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [],
      "link": "https://docs.blynk.io/en/hardware-guides/node-red",
      "prio": 1
    },
    {
      "title": "The Things Stack",
      "description": "LoRaWAN integration with Blynk using The Things Stack.",
      "icon": "file-empty",
      "shownTags": [
        "Integration",
        "Cloud-to-cloud",
        "TTS",
        "LoRaWAN"
      ],
      "hiddenTags": [
        "TTI",
        "TTN",
        "The Things Stack (TTS)"
      ],
      "link": "https://docs.blynk.io/en/hardware-guides/the-things-stack",
      "prio": 2
    },
    {
      "title": "Static Token Management",
      "description": "Deploying Products With Static Tokens",
      "icon": "file-empty",
      "shownTags": [
        "MQTT",
        "HTTP",
        "HTTPS",
        "Ethernet",
        "Cellular",
        "Satellite"
      ],
      "hiddenTags": [
        "Mass",
        "Production",
        "Factory"
      ],
      "link": "https://docs.blynk.io/en/commercial-use/deploying-products-with-static-authtokens",
      "prio": 2
    },
    {
      "title": "Platform API",
      "description": "Perform CRUD operations on devices, users, organizations, automations, webhooks, tags, templates, and more.",
      "icon": "file-empty",
      "shownTags": [
        "OAuth2",
        "MQTT",
        "HTTP",
        "HTTPS",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "Raspberry Pi",
        "OpenWrt",
        "Bridge",
        "Gateway"
      ],
      "link": "https://docs.blynk.io/en/blynk.cloud/platform-https-api",
      "prio": 1
    },
    {
      "title": "Blink an LED with Arduino + Ethernet",
      "description": "Remotely control the built-in LED on your Arduino Leonardo, UNO, or Mega board.",
      "icon": "blueprint",
      "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "Ethernet"
      ],
      "hiddenTags": [
        "Arduino Leonardo",
        "Arduino Mega",
        "Arduino Uno",
        "LED"
      ],
      "link": "/dashboard/blueprints/Library/TMPL482vhoHlq",
      "prio": 1
    },
    {
      "title": "Blink an LED with ESP32 (with WiFi provisioning & OTA)",
      "description": "This project is a quick start tutorial on connecting the ESP32 board to Blynk and controlling a built-in LED.",
      "icon": "blueprint",
      "shownTags": [
        "FOTA",
        "OTA",
        "device provisioning",
        "wifi provisioning",
        "WiFi"
      ],
      "hiddenTags": [
        "ESP32",
        "ESP32 LED",
        "ESP-32 DevKit"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4BlJLIkw7",
      "prio": 1
    },
    {
      "title": "Soil Moisture Monitoring with Wio Terminal",
      "description": "Monitor soil moisture & light levels for healthier plants with real-time recommendations.",
      "icon": "blueprint",
      "shownTags": [
        "FOTA",
        "OTA",
        "device provisioning",
        "wifi provisioning",
        "WIFI"
      ],
      "hiddenTags": [
        "Seeed Wio Terminal"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4uL0xae5N",
      "prio": 1
    },
    {
      "title": "ESP32 Edgent for Cellular and WiFi",
      "description": "Blynk.Edgent running on a dual-connectivity board. The LilyGo T-PCIe allows us to use WiFi and Cellular connectivity.",
      "icon": "blueprint",
      "shownTags": [
        "FOTA",
        "OTA",
        "device provisioning",
        "wifi provisioning",
        "WiFi",
        "Cellular",
        "Dual-Connectivity"
      ],
      "hiddenTags": [
        "ESP32"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4RCZ1Wy3i",
      "prio": 1
    },
    {
      "title": "Weather Monitoring with ESP32 (with WiFi provisioning & OTA)",
      "description": "Weather Station to monitor temperature, humidity, pressure, altitude using Blynk.Edgent for WI-FI provisioning and OTA.",
      "icon": "blueprint",
      "shownTags": [
        "FOTA",
        "OTA",
        "device provisioning",
        "wifi provisioning",
        "WiFi"
      ],
      "hiddenTags": [
        "ESP32"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4j57WtmD7",
      "prio": 1
    },
    {
      "title": "Weather Monitoring with ESP32 (with static tokens)",
      "description": "Effortlessly build a comprehensive Weather Station. Monitor temperature, humidity, atmospheric pressure, and altitude.",
      "icon": "blueprint",
      "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "WIFI"
      ],
      "hiddenTags": [
        "ESP32"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4WLh2qA0y",
      "prio": 1
    },
    {
      "title": "Connect a Particle device",
      "description": "This blueprint will help you set up bi-directional communication with any Particle hardware.",
      "icon": "blueprint",
      "shownTags": [
        "HTTP API",
        "webhook",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "Particle",
        "Tracker One",
        "Boron",
        "B Series SoM",
        "Photon 2",
        "P2",
        "Argon",
        "Photon",
        "Electron",
        "E Series",
        "Core"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4ej7--Xu_",
      "prio": 1
    },
    {
      "title": "Asset Tracking with Particle Boron",
      "description": "Track the moving device and monitor its speed on web and mobile dashboards via Particle Webhooks & Blynk HTTP API.",
      "icon": "blueprint",
      "shownTags": [
        "HTTP API",
        "GPS",
        "webhook",
        "Cellular"
      ],
      "hiddenTags": [
        "Particle",
        "FeatherWing",
        "Particle Boron"
      ],
      "link": "/dashboard/blueprints/Library/TMPL432pNNbZe",
      "prio": 1
    },
    {
      "title": "Iridium 9704 Launch Pad",
      "description": "Collect data from anywhere on the planet, sending it directly to the palm of your hand from your Iridium 9704 Launch Pad. ",
      "icon": "blueprint",
      "shownTags": [
        "GNSS",
        "HTTPs API",
        "Satellite"
      ],
      "hiddenTags": [
        "Iridium 9704 Launch Pad",
        "Iridium",
        "Iridium 9704"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4wL7mp9eA",
      "prio": 1
    },
    {
      "title": "Iridium 9704 Launch Pad Premium",
      "description": "This blueprint will allow you to collect data from anywhere on the planet, effortlessly sending it directly to the palm of your hand from you Iridium 9704 Launch Pad. ",
      "icon": "blueprint",
      "shownTags": [
        "GNSS",
        "HTTPs API",
        "Satellite"
      ],
      "hiddenTags": [
        "Iridium 9704 Launch Pad",
        "Iridium",
        "Iridium 9704"
      ],
      "link": "/dashboard/blueprints/Library/TMPL48KJfyGe7",
      "prio": 1
    },
    {
      "title": "NCD Environmental Air Quality",
      "description": "A simplified way to get your sensor data streaming to the Blynk cloud and pre-built dashboards for monitoring and alerts.",
      "icon": "blueprint",
      "shownTags": [
        "MQTT",
        "Node-RED",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "NCD.io"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4Bvbtdt3v",
      "prio": 1
    },
    {
      "title": "NCD Environmental Air Quality",
      "description": "Enables bulk deployments. Easily stream data to the cloud and monitor it via pre-built mobile and web dashboards.",
      "icon": "blueprint",
      "shownTags": [
        "MQTT",
        "Node-RED",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "NCD.io"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4Rayq6G_B",
      "prio": 1
    },
    {
      "title": "NCD Enterprise IIoT Gateway",
      "description": "Quickly set up gateway, configure Ethernet, Wi-Fi, and LTE connectivity, and integrate it with Blynk Cloud and Node-RED.",
      "icon": "blueprint",
      "shownTags": [
        "MQTT",
        "Node-RED",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "NCD.io"
      ],
      "link": "/dashboard/blueprints/Library/TMPL40YtWwLlq",
      "prio": 1
    },
    {
      "title": "NCD 1 Channel Vibration Sensor Plus",
      "description": "Quickly get your sensor data streaming to the cloud and monitor it from ready-made mobile and web dashboards.",
      "icon": "blueprint",
      "shownTags": [
        "MQTT",
        "Node-RED",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "NCD.io"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4YmuyzYq4",
      "prio": 1
    },
    {
      "title": "NCD 1 Channel Vibration Sensor Plus",
      "description": "A quick-start project to get your sensor data streaming to the cloud and monitor it from ready-made mobile and web dashboards.",
      "icon": "blueprint",
      "shownTags": [
        "MQTT",
        "Node-RED",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "NCD.io"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4HAlucI1g",
      "prio": 1
    },
    {
      "title": "NCD Wireless Contact Closure Sensor",
      "description": "A quick-start solution to stream your sensor data to the Blynk cloud, with pre-built mobile and web dashboards for real-time monitoring and alerts.",
      "icon": "blueprint",
      "shownTags": [
        "MQTT",
        "Node-RED",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "NCD.io"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4Lpysk_Je",
      "prio": 1
    },
    {
      "title": "NCD 3 Channel AC Current Monitor",
      "description": "Production-ready solution for real-time sensor data transmission to the gateway and instant streaming to pre-built mobile and web dashboards for monitoring.",
      "icon": "blueprint",
      "shownTags": [
        "MQTT",
        "Node-RED",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "NCD.io"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4ofexjN0-",
      "prio": 1
    },
    {
      "title": "miro Insight Lux",
      "description": "A ready-to-use setup for monitoring air quality and comfort \u2014 with dashboards, alerts, and LoRaWAN connectivity.",
      "icon": "blueprint",
      "shownTags": [
        "TTI",
        "LoRaWAN"
      ],
      "hiddenTags": [
        "Miromico"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4N6f1Lc0o",
      "prio": 1
    },
    {
      "title": "Milesight WS302- Sound level monitoring",
      "description": "Enables bulk deployments. Industrial solution with LoRaWAN network setup, key acoustic metrics, pre-built dashboards for monitoring and alerts.",
      "icon": "blueprint",
      "shownTags": [
        "TTI",
        "LoRaWAN"
      ],
      "hiddenTags": [
        "Milesight"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4ibBvqKR1",
      "prio": 1
    },
    {
      "title": "Milesight EM300 ZLD - Water leak detection",
      "description": "A quick-start project to enable water leak detection in various environments, providing real-time alerts to prevent damage.",
      "icon": "blueprint",
      "shownTags": [
        "TTI",
        "LoRaWAN"
      ],
      "hiddenTags": [
        "Milesight"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4r-HEzHpc",
      "prio": 1
    },
    {
      "title": "SenseCAP S2120 Weather Station",
      "description": "Quickly connect your sensor to the cloud and monitor essential environmental data \u2014 from air temperature and humidity to wind, precipitation, solar radiation, UV index, and more. ",
      "icon": "blueprint",
      "shownTags": [
        "TTI",
        "LoRaWAN"
      ],
      "hiddenTags": [
        "Seeed"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4zsMOp21D",
      "prio": 1
    },
    {
      "title": "Build an App for Your OpenWrt Router",
      "description": "Create an app for the popular WiFi router.",
      "icon": "blueprint",
      "shownTags": [
        "Lua",
        "Ethernet"
      ],
      "hiddenTags": [
        "OpenWrt"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4u3CRY3Vj",
      "prio": 1
    },
    {
      "title": "MQTT Air Cooler/Heater Demo",
      "description": "Connect, control, and monitor MQTT devices.",
      "icon": "blueprint",
      "shownTags": [
        "Python",
        "JavaScript",
        "Lua",
        "C",
        "C++",
        "MicroPython",
        "WiFi",
        "Ethernet",
        "Cellular"
      ],
      "hiddenTags": [
        "Raspberry Pi",
        "STM32",
        "Onion Omega2",
        "Espressif ESP32",
        "Raspberry Pi Pico W",
        "Nano 33 IoT",
        "Nano RP2040 Connect",
        "UNO R4 WiFi",
        "Seeed Wio Terminal",
        "ESP32",
        "Arduino",
        "PlatformIO",
        "Mosquitto",
        "ESP-IDF",
        "HTML5",
        "WebSocket",
        "OpenWRT",
        "SBC",
        "Single Board Computer",
        "STM32Cube",
        "MQTT",
        "FreeRTOS",
        "PPPoS"
      ],
      "link": "/dashboard/blueprints/Library/TMPL4zGiS1A7l",
      "prio": 1
    }
  ],
  "featuredTags": [
    "ESP32",
    "Arduino",
    "Python",
    "LoRaWAN",
    "Satellite",
    "Node-RED",
    "OTA"
  ]
}