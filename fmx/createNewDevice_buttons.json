{
"fallbackCard": {
    "title": "Need anything custom?",
    "description": "Contact our sales team to explore your options.",
    "icon": "rocket",
    "link": "https://blynk.io/console-form?refpage=Custom%20development"
},
"cards": [
    {
    "title": "Quickstart",
    "description": "A step-by-step guide to get your first device online in less than 5 minutes.",
    "icon": "rocket",
    "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "WiFi",
        "Ethernet",
        "Cellular",
        "ESP32",
        "ESP8266",
        "Microduino",
        "Seeed Wio Terminal",
        "SparkFun Blynk Board",
        "Teensy",
        "TinyDuino"
    ],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Espressif",
        "ESP8285",
        "WeMos D1 Mini",
        "NodeMCU",
        "Adafruit HUZZAH ESP8266",
        "SparkFun Thing",
        "ESP-01",
        "ESP-12E",
        "LOLIN D1 Mini",
        "AI-Thinker",
        "Wi-Fi",
        "Wi Fi"
    ],
    "link": "",
    "prio": 20,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Start now",
        "link": ""
        }
    ]
    },
    {
    "title": "Chirpstack Integration",
    "description":
        "We can help you connect your Chirpstack-powered devices to Blynk. Available with Enterprise plan.",
    "icon": "enter2",
    "shownTags": [
        "Chirpstack",
        "LNS",
        "Cloud-to-cloud",
        "Integration",
        "LoRaWAN",
        "LoRaWAN-enabled"
    ],
    "hiddenTags": [
        "Miromico",
        "Milesight",
        "Seeed",
        "Tektelic",
        "Thermokon",
        "Pepperl+Fuchs",
        "Atim",
        "MOKOSmart",
        "Low Power"
    ],
    "link": "https://blynk.io/console-form?refpage=Chirpstack",
    "prio": 40,
    "actions": [
        {
        "type": "link",
        "btnText": "Contact sales",
        "link": "https://blynk.io/console-form?refpage=Chirpstack"
        }
    ]
    },
    {
    "title": "AWS IoT Core Integration",
    "description": "Integrate AWS IoT Core with Blynk.",
    "icon": "enter2",
    "shownTags": [
        "Cloud-to-cloud",
        "AWS",
        "IoT Core",
        "Integration",
        "WiFi",
        "Ethernet",
        "Cellular",
        "LoRaWAN",
        "Satellite",
        "LoRaWAN-enabled"
    ],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Miromico",
        "Milesight",
        "Seeed",
        "Tektelic",
        "Thermokon",
        "Pepperl+Fuchs",
        "Atim",
        "MOKOSmart",
        "Low Power",
        "Wi-Fi",
        "Wi Fi"
    ],
    "link": "/dashboard/integrations?aws",
    "prio": 40,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Set up now",
        "link": "/dashboard/integrations?aws"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/hardware-guides/aws-iot-core"
        }
    ]
    },
    {
    "title": "Blues Integration",
    "description": "Use Blues Notecard to send sensor data to Blynk.",
    "icon": "enter2",
    "shownTags": [
        "Cloud-to-cloud",
        "Integration",
        "WiFi",
        "Cellular",
        "LoRaWAN",
        "Satellite",
        "Blues"
    ],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi"
    ],
    "link": "/dashboard/integrations?blues",
    "prio": 40,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Set up now",
        "link": "/dashboard/integrations?blues"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/hardware-guides/blues"
        }
    ]
    },
    {
    "title": "Myriota Integration",
    "description": "Connect satellite-powered devices to Blynk with Myriota.",
    "icon": "enter2",
    "shownTags": ["Cloud-to-cloud", "Integration", "Satellite", "Myriota"],
    "hiddenTags": [],
    "link": "/dashboard/integrations?myriota",
    "prio": 40,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Set up now",
        "link": "/dashboard/integrations?myriota"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/myriota"
        }
    ]
    },
    {
    "title": "The Things Stack Integration",
    "description": "LoRaWAN integration with Blynk using The Things Stack.",
    "icon": "enter2",
    "shownTags": ["Integration", "Cloud-to-cloud", "TTI", "LoRaWAN", "LoRaWAN-enabled"],
    "hiddenTags": [
        "Miromico",
        "Milesight",
        "Seeed",
        "Tektelic",
        "Thermokon",
        "Pepperl+Fuchs",
        "Atim",
        "MOKOSmart",
        "Low Power",
        "The Things Stack",
        "The Things Network",
        "The Things Industries",
        "TTN",
        "TTS"
    ],
    "link": "/dashboard/integrations?tti",
    "prio": 40,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Set up now",
        "link": "/dashboard/integrations?tti"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/hardware-guides/the-things-stack"
        }
    ]
    },
    {
    "title": "Blynk.NCP Example for Zephyr RTOS",
    "description": "Getting started with Blynk.NCP on Zephyr",
    "icon": "code",
    "shownTags": [
        "Zephyr",
        "NCP",
        "FOTA",
        "OTA",
        "BLE Provisioning",
        "Dual-MCU",
        "WiFi",
        "NRF52",
        "STM32"
    ],
    "hiddenTags": ["Wi-Fi", "Wi Fi"],
    "link": "https://github.com/Blynk-Technologies/Blynk-NCP-Example-Zephyr",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-NCP-Example-Zephyr"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.ncp/overview"
        }
    ]
    },
    {
    "title": "Arduino MQTT Sample",
    "description": "Sample code to connect Arduino devices to Blynk via MQTT.",
    "icon": "code",
    "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "CPP",
        "WiFi",
        "Arduino Boards",
        "ESP32",
        "ESP8266",
        "Raspberry Pi Pico W",
        "Nano 33 IoT",
        "Nano RP2040 Connect",
        "UNO R4 WiFi",
        "Seeed Wio Terminal"
    ],
    "hiddenTags": [
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Espressif",
        "ESP8285",
        "WeMos D1 Mini",
        "NodeMCU",
        "Adafruit HUZZAH ESP8266",
        "SparkFun Thing",
        "ESP-01",
        "ESP-12E",
        "LOLIN D1 Mini",
        "AI-Thinker",
        "Arduino MKR WiFi 1010",
        "Arduino MKR GSM 1400",
        "Arduino MKR NB 1500",
        "Arduino Zero",
        "Arduino Uno",
        "Arduino Duemilanove",
        "Arduino Nano",
        "Arduino Mini",
        "Arduino Pro Mini",
        "Arduino Pro Micro",
        "Arduino Due",
        "Arduino Mega",
        "Arduino MKR1000",
        "Arduino MKR VIDOR 4000",
        "Arduino Portenta H7",
        "Arduino Fio",
        "Arduino M0",
        "Arduino Ethernet",
        "Wi-Fi",
        "Wi Fi",
        "Raspi"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Arduino_Blynk_MQTT/README.md",
    "prio": 49,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Arduino_Blynk_MQTT/README.md"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "C with libmosquitto MQTT Sample",
    "description": "MQTT integration example using C and libmosquitto.",
    "icon": "code",
    "shownTags": ["C", "MQTT", "Mosquitto", "WiFi", "Ethernet", "Cellular"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/C_libmosquitto/README.md",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/C_libmosquitto/README.md"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "ESP-IDF Cellular MQTT Sample",
    "description": "Cellular ESP-IDF integration with Blynk via MQTT.",
    "icon": "code",
    "shownTags": ["ESP-IDF", "Cellular", "ESP32"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/ESP-IDF-Cellular/README.md",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/ESP-IDF-Cellular/README.md"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "HTML5 WebSocket MQTT Sample",
    "description": "Web-based MQTT control interface using HTML5 and WebSocket.",
    "icon": "code",
    "shownTags": ["HTML5", "JavaScript", "Node.js", "WebSocket", "WiFi", "Ethernet", "Cellular"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/HTML5_WebSocket/README.md",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/HTML5_WebSocket/README.md"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "MicroPython MQTT Sample",
    "description": "Minimal MQTT example for MicroPython devices.",
    "icon": "code",
    "shownTags": [
        "Python",
        "MicroPython",
        "WiFi",
        "Ethernet",
        "Cellular",
        "ESP32",
        "Raspberry Pi Pico W",
        "SBC"
    ],
    "hiddenTags": [
        "Single Board Computers",
        "Raspberry Pi",
        "BeagleBone Black",
        "NVIDIA Jetson Nano",
        "NanoPi",
        "Onion Omega2",
        "Orange Pi",
        "OpenWrt",
        "VoCore",
        "VoCore2",
        "Radxa Rock",
        "Rock Pi 4",
        "LattePanda",
        "Banana Pi",
        "UDOO",
        "LattePanda",
        "ODROID",
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Wi-Fi",
        "Wi Fi",
        "Raspi"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/MicroPython/README.md",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/MicroPython/README.md"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "Python 3 MQTT Sample",
    "description": "MQTT integration example for Raspberry Pi and industrial gateways.",
    "icon": "code",
    "shownTags": ["Python", "WiFi", "Ethernet", "Cellular", "SBC"],
    "hiddenTags": [
        "Single Board Computers",
        "Raspberry Pi",
        "BeagleBone Black",
        "NVIDIA Jetson Nano",
        "NanoPi",
        "Onion Omega2",
        "Orange Pi",
        "OpenWrt",
        "VoCore",
        "VoCore2",
        "Radxa Rock",
        "Rock Pi 4",
        "LattePanda",
        "Banana Pi",
        "UDOO",
        "LattePanda",
        "ODROID",
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "Raspi"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Python3/README.md",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Python3/README.md"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "Lua OpenWrt MQTT Sample",
    "description": "Sample MQTT code for Lua running on OpenWrt.",
    "icon": "code",
    "shownTags": ["Lua", "OpenWrt", "WiFi", "Ethernet", "Cellular", "SBC"],
    "hiddenTags": [
        "Single Board Computers",
        "Raspberry Pi",
        "BeagleBone Black",
        "NVIDIA Jetson Nano",
        "NanoPi",
        "Onion Omega2",
        "Orange Pi",
        "OpenWrt",
        "VoCore",
        "VoCore2",
        "Radxa Rock",
        "Rock Pi 4",
        "LattePanda",
        "Banana Pi",
        "UDOO",
        "LattePanda",
        "ODROID",
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Lua_OpenWrt/README.md",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/Lua_OpenWrt/README.md"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "STM32F407 PPPoS MQTT Sample",
    "description": "MQTT over PPPoS for STM32F407-based projects.",
    "icon": "code",
    "shownTags": ["FreeRTOS", "MQTT", "Cellular", "STM32"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "WebSocket"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/STM32F407_PPPoS_MQTT/README.md",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MQTT-Samples/blob/main/STM32F407_PPPoS_MQTT/README.md"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "Blynk.Edgent for MicroPython",
    "description":
        "Enables secure BLE provisioning, OTA updates, multi-network connectivity, and remote REPL access — all with built-in support for async I/O, TLS, and unified system configuration.",
    "icon": "code",
    "shownTags": [
        "OTA",
        "Provisioning",
        "MicroPython",
        "WiFi",
        "Ethernet",
        "Cellular",
        "ESP32",
        "Raspberry Pi Pico W"
    ],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Wi-Fi",
        "Wi Fi",
        "Python",
        "Raspi"
    ],
    "link": "https://github.com/Blynk-Technologies/Blynk-MicroPython-Edgent",
    "prio": 30,
    "actions": [
        {
        "type": "link",
        "btnText": "Code example",
        "link": "https://github.com/Blynk-Technologies/Blynk-MicroPython-Edgent"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.edgent/overview"
        }
    ]
    },
    {
    "title": "Firmware API (Blynk Library)",
    "description": "Guide to installing Blynk firmware library.",
    "icon": "book",
    "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "CPP",
        "WiFi",
        "Ethernet",
        "Cellular",
        "Arduino Boards",
        "ESP8266",
        "ESP32"
    ],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Espressif",
        "ESP8285",
        "WeMos D1 Mini",
        "NodeMCU",
        "Adafruit HUZZAH ESP8266",
        "SparkFun Thing",
        "ESP-01",
        "ESP-12E",
        "LOLIN D1 Mini",
        "AI-Thinker",
        "Arduino MKR WiFi 1010",
        "Arduino MKR GSM 1400",
        "Arduino MKR NB 1500",
        "Arduino Zero",
        "Arduino Uno",
        "Arduino Duemilanove",
        "Arduino Nano",
        "Arduino Mini",
        "Arduino Pro Mini",
        "Arduino Pro Micro",
        "Arduino Due",
        "Arduino Mega",
        "Arduino MKR1000",
        "Arduino MKR VIDOR 4000",
        "Arduino Portenta H7",
        "Arduino Fio",
        "Arduino M0",
        "Arduino Ethernet",
        "Wi-Fi",
        "Wi Fi",
        "Blynk library",
        "Blynk protocol"
    ],
    "link": "https://docs.blynk.io/en/blynk-library-firmware-api/installation",
    "prio": 50,
    "actions": [
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk-library-firmware-api/installation"
        }
    ]
    },
    {
    "title": "Device MQTT API",
    "description": "MQTT API reference for device communication with Blynk.",
    "icon": "book",
    "shownTags": [
        "MQTT",
        "MQTTS",
        "WebSocket",
        "Python",
        "JavaScript",
        "WiFi",
        "Ethernet",
        "Cellular",
        "SBC"
    ],
    "hiddenTags": [
        "Single Board Computers",
        "Raspberry Pi",
        "BeagleBone Black",
        "NVIDIA Jetson Nano",
        "NanoPi",
        "Onion Omega2",
        "Orange Pi",
        "OpenWrt",
        "VoCore",
        "VoCore2",
        "Radxa Rock",
        "Rock Pi 4",
        "LattePanda",
        "Banana Pi",
        "UDOO",
        "LattePanda",
        "ODROID",
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "TTI",
        "TTN",
        "The Things Stack",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket"
    ],
    "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api",
    "prio": 50,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4zGiS1A7l"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "Device HTTPS API",
    "description": "HTTPS API documentation for direct device-to-cloud communication.",
    "icon": "book",
    "shownTags": ["HTTP", "HTTPS", "IFTTT", "Zapier", "WiFi", "Ethernet", "Cellular"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "REST",
        "HTTP"
    ],
    "link": "https://docs.blynk.io/en/blynk.cloud/device-https-api",
    "prio": 50,
    "actions": [
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud/device-https-api"
        }
    ]
    },
    {
    "title": "Blynk.Edgent Overview",
    "description": "Dynamic authentication and OTA updates with Blynk.Edgent.",
    "icon": "book",
    "shownTags": [
        "OTA",
        "Provisioning",
        "WiFi",
        "ESP32",
        "ESP8266",
        "Seeed Wio Terminal",
        "TI CC3220"
    ],
    "hiddenTags": [
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Espressif",
        "ESP8285",
        "WeMos D1 Mini",
        "NodeMCU",
        "Adafruit HUZZAH ESP8266",
        "SparkFun Thing",
        "ESP-01",
        "ESP-12E",
        "LOLIN D1 Mini",
        "AI-Thinker",
        "Wi-Fi",
        "Wi Fi"
    ],
    "link": "https://docs.blynk.io/en/blynk.edgent/overview",
    "prio": 50,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4BlJLIkw7"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.edgent/overview"
        }
    ]
    },
    {
    "title": "Blynk.NCP Overview",
    "description": "Offload connectivity and OTA logic using a Network Co-Processor.",
    "icon": "book",
    "shownTags": [
        "OTA",
        "Provisioning",
        "Zephyr",
        "Arduino",
        "C99",
        "WiFi",
        "Ethernet",
        "ESP32",
        "Arduino UNO R4 WiFi",
        "Arduino Portenta C33",
        "Arduino Nano RP2040 Connect",
        "Arduino Nano 33 IoT",
        "Arduino MKR WiFi 1010",
        "LILYGO T-PicoC3",
        "Raspberry Pi Pico",
        "ESP8266",
        "NRF52",
        "Raspi"
    ],
    "hiddenTags": [
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Espressif",
        "ESP8285",
        "WeMos D1 Mini",
        "NodeMCU",
        "Adafruit HUZZAH ESP8266",
        "SparkFun Thing",
        "ESP-01",
        "ESP-12E",
        "LOLIN D1 Mini",
        "AI-Thinker",
        "Wi-Fi",
        "Wi Fi",
        "Mass",
        "Production",
        "Factory",
        "Commercial",
        "Raspi"
    ],
    "link": "https://docs.blynk.io/en/blynk.ncp/overview",
    "prio": 50,
    "actions": [
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.ncp/overview"
        }
    ]
    },
    {
    "title": "NCD Industrial Vibration Sensor",
    "description": "Step-by-step setup for industrial vibration sensors from NCD.",
    "icon": "book",
    "shownTags": ["MQTT", "Node-RED", "NCD.io"],
    "hiddenTags": ["WebSocket", "nodered", "node.red", "node red"],
    "link": "https://docs.blynk.io/en/hardware-guides/ncd-industrial-vibration-sensor",
    "prio": 50,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4YmuyzYq4"
        },
        {
        "type": "link",
        "btnText": "Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/ncd-industrial-vibration-sensor"
        }
    ]
    },
    {
    "title": "Node-RED",
    "description": "Connect Node-RED flows to Blynk and control devices visually.",
    "icon": "book",
    "shownTags": ["MQTT", "Node-RED", "WiFi", "Ethernet", "Cellular", "SBC"],
    "hiddenTags": [
        "Single Board Computers",
        "Raspberry Pi",
        "BeagleBone Black",
        "NVIDIA Jetson Nano",
        "NanoPi",
        "Onion Omega2",
        "Orange Pi",
        "OpenWrt",
        "VoCore",
        "VoCore2",
        "Radxa Rock",
        "Rock Pi 4",
        "LattePanda",
        "Banana Pi",
        "UDOO",
        "LattePanda",
        "ODROID",
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket",
        "nodered",
        "node.red",
        "node red"
    ],
    "link": "https://docs.blynk.io/en/hardware-guides/node-red",
    "prio": 50,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4Bvbtdt3v"
        },
        {
        "type": "link",
        "btnText": "Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/node-red"
        }
    ]
    },
    {
    "title": "Static Token Management",
    "description": "Deploying Products With Static Tokens",
    "icon": "book",
    "shownTags": ["MQTT", "HTTP", "HTTPS", "Ethernet", "Cellular", "Satellite"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "REST",
        "HTTP",
        "WebSocket",
        "Mass",
        "Production",
        "Factory",
        "Commercial"
    ],
    "link": "https://docs.blynk.io/en/commercial-use/deploying-products-with-static-authtokens",
    "prio": 50,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4WLh2qA0y"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/commercial-use/deploying-products-with-static-authtokens"
        }
    ]
    },
    {
    "title": "Platform API",
    "description":
        "Perform CRUD operations on devices, users, organizations, automations, webhooks, tags, templates, and more.",
    "icon": "book",
    "shownTags": [
        "OAuth2",
        "MQTT",
        "HTTP",
        "HTTPS",
        "WiFi",
        "Ethernet",
        "Cellular",
        "Bridge",
        "Gateway",
        "SBC"
    ],
    "hiddenTags": [
        "Single Board Computers",
        "Raspberry Pi",
        "BeagleBone Black",
        "NVIDIA Jetson Nano",
        "NanoPi",
        "Onion Omega2",
        "Orange Pi",
        "OpenWrt",
        "VoCore",
        "VoCore2",
        "Radxa Rock",
        "Rock Pi 4",
        "LattePanda",
        "Banana Pi",
        "UDOO",
        "LattePanda",
        "ODROID",
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "REST",
        "HTTP",
        "WebSocket"
    ],
    "link": "https://docs.blynk.io/en/blynk.cloud/platform-https-api",
    "prio": 50,
    "actions": [
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud/platform-https-api"
        }
    ]
    },
    {
    "title": "Blink an LED with Arduino + Ethernet",
    "description":
        "Remotely control the built-in LED on your Arduino Leonardo, UNO, or Mega board.",
    "icon": "blueprint",
    "shownTags": [
        "Arduino",
        "PlatformIO",
        "C++",
        "CPP",
        "Ethernet",
        "Arduino Leonardo",
        "Arduino Mega",
        "Arduino Uno",
        "LED"
    ],
    "hiddenTags": ["template", "blueprint"],
    "link": "/dashboard/blueprints/Library/TMPL482vhoHlq",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL482vhoHlq"
        }
    ]
    },
    {
    "title": "Blink an LED with ESP32 (with WiFi provisioning and OTA)",
    "description":
        "This project is a quick start tutorial on connecting the ESP32 board to Blynk and controlling a built-in LED.",
    "icon": "blueprint",
    "shownTags": ["FOTA", "OTA", "device provisioning", "WiFi provisioning", "WiFi", "ESP32"],
    "hiddenTags": [
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Wi-Fi",
        "Wi Fi",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4BlJLIkw7",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4BlJLIkw7"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.edgent/overview"
        }
    ]
    },
    {
    "title": "Soil Moisture Monitoring with Wio Terminal",
    "description":
        "Monitor soil moisture & light levels for healthier plants with real-time recommendations.",
    "icon": "blueprint",
    "shownTags": [
        "FOTA",
        "OTA",
        "device provisioning",
        "WiFi provisioning",
        "WiFi",
        "Seeed Wio Terminal"
    ],
    "hiddenTags": ["Wi-Fi", "Wi Fi", "sensor", "template", "blueprint"],
    "link": "/dashboard/blueprints/Library/TMPL4uL0xae5N",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4uL0xae5N"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.edgent/overview"
        }
    ]
    },
    {
    "title": "ESP32 Edgent for Cellular and WiFi",
    "description":
        "Blynk.Edgent running on a dual-connectivity board. The LilyGo T-PCIe allows us to use WiFi and Cellular connectivity.",
    "icon": "blueprint",
    "shownTags": [
        "FOTA",
        "OTA",
        "device provisioning",
        "WiFi provisioning",
        "WiFi",
        "Cellular",
        "Dual-Connectivity",
        "LilyGo® TTGO T-PCIe"
    ],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "ESP32",
        "SIMCom",
        "SIM7600",
        "SIM7000",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4RCZ1Wy3i",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4RCZ1Wy3i"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.edgent/overview"
        }
    ]
    },
    {
    "title": "Weather Monitoring on ESP32 (WiFi provisioning & OTA)",
    "description":
        "Weather Station to monitor temperature, humidity, pressure, altitude using Blynk.Edgent for WI-FI provisioning and OTA.",
    "icon": "blueprint",
    "shownTags": ["FOTA", "OTA", "device provisioning", "WiFi provisioning", "WiFi", "ESP32"],
    "hiddenTags": [
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Wi-Fi",
        "Wi Fi",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4j57WtmD7",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4j57WtmD7"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.edgent/overview"
        }
    ]
    },
    {
    "title": "Weather Monitoring with ESP32 (with static tokens)",
    "description":
        "Effortlessly build a comprehensive Weather Station. Monitor temperature, humidity, atmospheric pressure, and altitude.",
    "icon": "blueprint",
    "shownTags": ["Arduino", "PlatformIO", "C++", "CPP", "WiFi", "ESP32"],
    "hiddenTags": [
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Wi-Fi",
        "Wi Fi",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4WLh2qA0y",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4WLh2qA0y"
        },
        {
        "type": "link",
        "btnText": "Static token management",
        "link": "https://docs.blynk.io/en/commercial-use/deploying-products-with-static-authtokens"
        }
    ]
    },
    {
    "title": "Connect a Particle device",
    "description":
        "This blueprint will help you set up bi-directional communication with any Particle hardware.",
    "icon": "blueprint",
    "shownTags": ["HTTP API", "webhook", "WiFi", "Ethernet", "Cellular", "Particle"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Core",
        "Photon",
        "Electron",
        "Boron",
        "Photon 2",
        "P2",
        "Tracker SoM",
        "Tracker One",
        "Wi-Fi",
        "Wi Fi",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4ej7--Xu_",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4ej7--Xu_"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/hardware-guides/particle"
        }
    ]
    },
    {
    "title": "Asset Tracking with Particle Boron",
    "description":
        "Track the moving device and monitor its speed on web and mobile dashboards via Particle Webhooks & Blynk HTTP API.",
    "icon": "blueprint",
    "shownTags": ["HTTP API", "GPS", "webhook", "Cellular", "FeatherWing", "Particle Boron"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Core",
        "Photon",
        "Electron",
        "Boron",
        "Photon 2",
        "P2",
        "Tracker SoM",
        "Tracker One",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL432pNNbZe",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL432pNNbZe"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/hardware-guides/particle"
        }
    ]
    },
    {
    "title": "Iridium 9704 Launch Pad",
    "description":
        "Collect data from anywhere on the planet, sending it directly to the palm of your hand from your Iridium 9704 Launch Pad. ",
    "icon": "blueprint",
    "shownTags": [
        "GNSS",
        "HTTPs API",
        "Satellite",
        "Iridium 9704 Launch Pad",
        "Iridium",
        "Iridium 9704"
    ],
    "hiddenTags": ["REST", "HTTP", "template", "blueprint"],
    "link": "/dashboard/blueprints/Library/TMPL4wL7mp9eA",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4wL7mp9eA"
        }
    ]
    },
    {
    "title": "Iridium 9704 Launch Pad Premium",
    "description":
        "This blueprint will allow you to collect data from anywhere on the planet, effortlessly sending it directly to the palm of your hand from you Iridium 9704 Launch Pad. ",
    "icon": "blueprint",
    "shownTags": [
        "GNSS",
        "HTTPs API",
        "Satellite",
        "Iridium 9704 Launch Pad",
        "Iridium",
        "Iridium 9704"
    ],
    "hiddenTags": ["REST", "HTTP", "template", "blueprint"],
    "link": "/dashboard/blueprints/Library/TMPL48KJfyGe7",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL48KJfyGe7"
        }
    ]
    },
    {
    "title": "Basic Environmental Air Quality Solution",
    "description":
        "A simplified way to get your sensor data streaming to the Blynk cloud and pre-built dashboards for monitoring and alerts.",
    "icon": "blueprint",
    "shownTags": ["MQTT", "Node-RED", "WiFi", "Ethernet", "Cellular", "NCD.io"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket",
        "nodered",
        "node.red",
        "node red",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4Bvbtdt3v",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4Bvbtdt3v"
        },
        {
        "type": "link",
        "btnText": "Node-RED Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/node-red"
        }
    ]
    },
    {
    "title": "Enterprise Grade Environmental Air Quality Solution",
    "description":
        "Enables bulk deployments. Easily stream data to the cloud and monitor it via pre-built mobile and web dashboards.",
    "icon": "blueprint",
    "shownTags": ["MQTT", "Node-RED", "WiFi", "Ethernet", "Cellular", "NCD.io"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket",
        "nodered",
        "node.red",
        "node red",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4Rayq6G_B",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4Rayq6G_B"
        },
        {
        "type": "link",
        "btnText": "Node-RED Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/node-red"
        }
    ]
    },
    {
    "title": "Enterprise IIoT Gateway Solution",
    "description":
        "Quickly set up gateway, configure Ethernet, Wi-Fi, and LTE connectivity, and integrate it with Blynk Cloud and Node-RED.",
    "icon": "blueprint",
    "shownTags": ["MQTT", "Node-RED", "WiFi", "Ethernet", "Cellular", "NCD.io"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket",
        "nodered",
        "node.red",
        "node red",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL40YtWwLlq",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL40YtWwLlq"
        },
        {
        "type": "link",
        "btnText": "Node-RED Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/node-red"
        }
    ]
    },
    {
    "title": "Basic Vibration Sensor Solution",
    "description":
        "Quickly get your sensor data streaming to the cloud and monitor it from ready-made mobile and web dashboards.",
    "icon": "blueprint",
    "shownTags": ["MQTT", "Node-RED", "WiFi", "Ethernet", "Cellular", "NCD.io"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket",
        "nodered",
        "node.red",
        "node red",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4YmuyzYq4",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4YmuyzYq4"
        },
        {
        "type": "link",
        "btnText": "Node-RED Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/node-red"
        }
    ]
    },
    {
    "title": "Enterprise Grade Vibration Monitoring Solution",
    "description":
        "A quick-start project to get your sensor data streaming to the cloud and monitor it from ready-made mobile and web dashboards.",
    "icon": "blueprint",
    "shownTags": ["MQTT", "Node-RED", "WiFi", "Ethernet", "Cellular", "NCD.io"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket",
        "nodered",
        "node.red",
        "node red",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4HAlucI1g",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4HAlucI1g"
        },
        {
        "type": "link",
        "btnText": "Node-RED Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/node-red"
        }
    ]
    },
    {
    "title": "Wireless Contact Closure Solution",
    "description":
        "A quick-start solution to stream your sensor data to the Blynk cloud, with pre-built mobile and web dashboards for real-time monitoring and alerts.",
    "icon": "blueprint",
    "shownTags": ["MQTT", "Node-RED", "WiFi", "Ethernet", "Cellular", "NCD.io"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket",
        "nodered",
        "node.red",
        "node red",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4Lpysk_Je",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4Lpysk_Je"
        },
        {
        "type": "link",
        "btnText": "Node-RED Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/node-red"
        }
    ]
    },
    {
    "title": "Industrial Grade AC Current Monitoring Solution",
    "description":
        "Production-ready solution for real-time sensor data transmission to the gateway and instant streaming to pre-built mobile and web dashboards for monitoring.",
    "icon": "blueprint",
    "shownTags": ["MQTT", "Node-RED", "WiFi", "Ethernet", "Cellular", "NCD.io"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "WebSocket",
        "nodered",
        "node.red",
        "node red",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4ofexjN0-",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4ofexjN0-"
        },
        {
        "type": "link",
        "btnText": "Node-RED Guide",
        "link": "https://docs.blynk.io/en/hardware-guides/node-red"
        }
    ]
    },
    {
    "title": "Battery-Free Air Quality Solution for CO2, Temperature, and Humidity",
    "description":
        "A ready-to-use setup for monitoring air quality and comfort — with dashboards, alerts, and LoRaWAN connectivity.",
    "icon": "blueprint",
    "shownTags": ["TTI", "LoRaWAN", "Miromico"],
    "hiddenTags": [
        "The Things Stack",
        "The Things Network",
        "The Things Industries",
        "TTN",
        "TTS",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4Dog_6etj",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4Dog_6etj"
        }
    ]
    },
    {
    "title": "Production Ready Sound Level Monitoring Solution",
    "description":
        "Enables bulk deployments. Industrial solution with LoRaWAN network setup, key acoustic metrics, pre-built dashboards for monitoring and alerts.",
    "icon": "blueprint",
    "shownTags": ["TTI", "LoRaWAN", "Milesight"],
    "hiddenTags": [
        "The Things Stack",
        "The Things Network",
        "The Things Industries",
        "TTN",
        "TTS",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4ibBvqKR1",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4ibBvqKR1"
        }
    ]
    },
    {
    "title": "Water Leak Detection Solution",
    "description":
        "A quick-start project to enable water leak detection in various environments, providing real-time alerts to prevent damage.",
    "icon": "blueprint",
    "shownTags": ["TTI", "LoRaWAN", "Milesight"],
    "hiddenTags": [
        "The Things Stack",
        "The Things Network",
        "The Things Industries",
        "TTN",
        "TTS",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4r-HEzHpc",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4r-HEzHpc"
        }
    ]
    },
    {
    "title": "Advanced Weather Monitoring Solution",
    "description":
        "Quickly connect your sensor to the cloud and monitor essential environmental data — from air temperature and humidity to wind, precipitation, solar radiation, UV index, and more. ",
    "icon": "blueprint",
    "shownTags": ["TTI", "LoRaWAN", "Seeed"],
    "hiddenTags": [
        "The Things Stack",
        "The Things Network",
        "The Things Industries",
        "TTN",
        "TTS",
        "sensor",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4zsMOp21D",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4zsMOp21D"
        }
    ]
    },
    {
    "title": "Build an App for Your OpenWrt Router",
    "description": "Create an app for the popular WiFi router.",
    "icon": "blueprint",
    "shownTags": ["Lua", "WiFi", "Ethernet", "OpenWrt", "SBC"],
    "hiddenTags": [
        "Single Board Computers",
        "Raspberry Pi",
        "BeagleBone Black",
        "NVIDIA Jetson Nano",
        "NanoPi",
        "Onion Omega2",
        "Orange Pi",
        "OpenWrt",
        "VoCore",
        "VoCore2",
        "Radxa Rock",
        "Rock Pi 4",
        "LattePanda",
        "Banana Pi",
        "UDOO",
        "LattePanda",
        "ODROID",
        "Wi-Fi",
        "Wi Fi",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4u3CRY3Vj",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4u3CRY3Vj"
        }
    ]
    },
    {
    "title": "MQTT Air Cooler/Heater Demo",
    "description": "Connect, control, and monitor MQTT devices.",
    "icon": "blueprint",
    "shownTags": [
        "Python",
        "JavaScript",
        "Lua",
        "C",
        "C++",
        "MicroPython",
        "CPP",
        "WiFi",
        "Ethernet",
        "Cellular",
        "SBC",
        "STM32",
        "ESP32",
        "Raspberry Pi Pico W",
        "Nano 33 IoT",
        "Nano RP2040 Connect",
        "UNO R4 WiFi",
        "Seeed Wio Terminal",
        "ESP32"
    ],
    "hiddenTags": [
        "Single Board Computers",
        "Raspberry Pi",
        "BeagleBone Black",
        "NVIDIA Jetson Nano",
        "NanoPi",
        "Onion Omega2",
        "Orange Pi",
        "OpenWrt",
        "VoCore",
        "VoCore2",
        "Radxa Rock",
        "Rock Pi 4",
        "LattePanda",
        "Banana Pi",
        "UDOO",
        "LattePanda",
        "ODROID",
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Espressif",
        "ESP32-C3",
        "ESP32-C6",
        "ESP32-C5",
        "ESP32-S3",
        "ESP32-S2",
        "ESP32-PICO-D4",
        "ESP32-WROOM-32",
        "ESP32-WROVER",
        "ESP32-SOLO-1",
        "ESP32-NINA-W102",
        "TTGO T8",
        "TTGO T-Display",
        "TTGO T-Beam",
        "M5Stack Core2",
        "M5StickC",
        "LILYGO T-SIM7000G",
        "Olimex ESP32-EVB",
        "D1 Mini ESP32",
        "ESP32 Wi-Fi",
        "ESP32 WiFi",
        "Wi-Fi",
        "Wi Fi",
        "Arduino",
        "PlatformIO",
        "Mosquitto",
        "ESP-IDF",
        "HTML5",
        "WebSocket",
        "SBC",
        "STM32Cube",
        "MQTT",
        "FreeRTOS",
        "PPPoS",
        "template",
        "blueprint",
        "Raspi"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4zGiS1A7l",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4zGiS1A7l"
        },
        {
        "type": "link",
        "btnText": "Documentation",
        "link": "https://docs.blynk.io/en/blynk.cloud-mqtt-api/device-mqtt-api"
        }
    ]
    },
    {
    "title": "Blues - Multi-Connectivity IoT Starter",
    "description":
        "Universal monitor with Blues Notecard: tracks temp, pressure, battery, door alerts&signal — unified config for any radio",
    "icon": "blueprint",
    "shownTags": ["Cloud-to-cloud", "WiFi", "LoRaWAN", "Cellular", "Blues"],
    "hiddenTags": [
        "LTE",
        "GSM",
        "HSDPA",
        "HSPA+",
        "3GPP",
        "EDGE",
        "2G",
        "3G",
        "4G",
        "5G",
        "Cat M1",
        "Cat M4",
        "Wi-Fi",
        "Wi Fi",
        "template",
        "blueprint"
    ],
    "link": "/dashboard/blueprints/Library/TMPL4irZ1F2AA",
    "prio": 10,
    "actions": [
        {
        "type": "secondary",
        "btnText": "Blueprint",
        "link": "/dashboard/blueprints/Library/TMPL4irZ1F2AA"
        }
    ]
    }
],
"featuredTags": ["ESP32", "Arduino", "Python", "LoRaWAN", "Satellite", "Node-RED", "OTA"]
}
